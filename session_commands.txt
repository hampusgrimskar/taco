
CREATE NEW SESSION:
	screen -S <session_name>

DETACH FROM A SESSION:
	screen -d <session_name>

ATTACH TO A SESSION:
	screen -r <session_name>


DELETE A SESSION:
	screen -X -S <session_name> quit

LIST SESSIONS:
	screen -ls


screen -S test3 -X bindkey ^d detach

run this command AFTER the session has been started.
it will rebind ctrl+d to detach from session instead of terminating



Final command for creating new session

The command performs the following:
- Starts new session
- binds ctrl+d to detach from session
- cd into directory
- launch interactive bash

screen -S test bash -c "screen -S test -X bindkey ^d detach && cd /home/egriham && exec bash"



########### TMUX ############

CREATE SESSION:
	tmux new-session -s <session_name> \
	-c <start_directory> \
	"tmux bind-key -n Escape run 'if \
	[ #{pane_current_command} != vi ] && \
	[ #{pane_current_command} != vim ] && \
	[ #{pane_current_command} != nvim ] && \
	[ #{pane_current_command} != git ]; \
 	then tmux detach; \
	else tmux send-keys Escape; fi'; \
	tmux set-option -g escape-time 0; \
	tmux set -g mouse on; \
	bash"

ATTACH TO SESSION
	tmux attach -t <session_name>

DETACH FROM SESSION
	tmux detach

NEW WINDOW WITH START directory
	tmux new-window -n <window_name> -c <directory>

LIST ALL SESSION NAMES:
	tmux ls | awk -F: '{print $1}'

BIND KEY WITHOUT PREFIX
	bind-key -n Escape detach

REMOVE ESCAPE TIME DELAY
	set-option -g escape-time 0

ENABLE SCROLLING
	set -g mouse on

DISABLE SESSION DETACH WITH ESCAPE WHILE IN VI EDITOR
	tmux bind-key -n Escape run "if [ #{pane_current_command} != vi ] && \
	[ #{pane_current_command} != vim ] && \
	[ #{pane_current_command} != nvim ] && \
	[ #{pane_current_command} != git ]; \
	then tmux detach; \
	else tmux send-keys Escape; fi"
